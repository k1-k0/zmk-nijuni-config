/*
 * Copyright (c) 2024 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define TTMS    200
#define QTMS    175
#define RPIDMS  125

&lt {
    tapping-term-ms = <TTMS>;
    quick-tap-ms = <QTMS>;
};

/ {
    behaviors {
        hrml: hrml {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <TTMS>;
            quick-tap-ms = <QTMS>;
            require-prior-idle-ms = <RPIDMS>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41>;
        };

        hrmr: hrmr {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <TTMS>;
            quick-tap-ms = <QTMS>;
            require-prior-idle-ms = <RPIDMS>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
        };
    };

    combos {
        compatible = "zmk,combos";

        f14 {
            bindings = <&kp F14>;
            key-positions = <14 15>;
            timeout-ms = <24>;
            require-prior-idle-ms = <RPIDMS>;
        };

        f15 {
            bindings = <&kp F15>;
            key-positions = <20 21>;
            timeout-ms = <24>;
            require-prior-idle-ms = <RPIDMS>;
        };

        equal {
            bindings = <&kp EQUAL>;
            key-positions = <15 16>;
            timeout-ms = <24>;
            require-prior-idle-ms = <RPIDMS>;
        };

        minus {
            bindings = <&kp MINUS>;
            key-positions = <19 20>;
            timeout-ms = <24>;
            require-prior-idle-ms = <RPIDMS>;
        };

        reset_r {
            bindings = <&sys_reset>;
            key-positions = <32 33>;
            layers = <3>;
            timeout-ms = <24>;
        };

        reset_l {
            bindings = <&sys_reset>;
            key-positions = <26 27>;
            layers = <3>;
            timeout-ms = <24>;
        };

        boot_l {
            bindings = <&bootloader>;
            key-positions = <2 3>;
            layers = <3>;
            timeout-ms = <24>;
        };

        boot_r {
            bindings = <&bootloader>;
            key-positions = <8 9>;
            layers = <3>;
            timeout-ms = <24>;
        };

        lf16 {
            bindings = <&kp F16>;
            key-positions = <16 17>;
            timeout-ms = <30>;
            require-prior-idle-ms = <RPIDMS>;
        };

        rf16 {
            bindings = <&kp F16>;
            key-positions = <18 19>;
            timeout-ms = <30>;
            require-prior-idle-ms = <RPIDMS>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        qwe {
            bindings = <
&kp RBKT                      &kp Q         &kp W         &kp E          &kp R          &kp T          &kp Y      &kp U          &kp I          &kp O         &kp P            &kp LBKT
&kp GRAVE                     &hrml LGUI A  &hrml LALT S  &hrml LCTRL D  &hrml LSHFT F  &kp G          &kp H      &hrmr RSHFT J  &hrmr RCTRL K  &hrmr RALT L  &hrmr RGUI SEMI  &kp APOS
&hrml LS(LA(LC(LGUI))) MINUS  &kp Z         &kp X         &kp C          &kp V          &kp B          &kp N      &kp M          &kp COMMA      &kp DOT       &kp FSLH         &hrmr RS(RA(RC(RGUI))) BSLH
                                                          &lt 3 TAB      &lt 1 SPACE    &lt 2 ENTER    &lt 2 ESC  &lt 1 BSPC     &lt 3 DEL
            >;
        };

        nav {
            bindings = <
&kp KP_NUMLOCK  &kp KP_DIVIDE           &kp N7         &kp N8          &kp N9          &kp PLUS     &kp CAPS    &kp PG_UP          &kp UP            &kp PAGE_DOWN     &kp PSCRN       &kp INS
&kp COMMA       &hrml LGUI KP_ASTERISK  &hrml LALT N4  &hrml LCTRL N5  &hrml LSHFT N6  &kp MINUS    &kp HOME    &hrmr RSHIFT LEFT  &hrmr RCTRL DOWN  &hrmr RALT RIGHT  &hrmr RGUI END  &kp RG(TAB)
&kp DOT         &kp N0                  &kp N1         &kp N2          &kp N3          &kp EQUAL    &caps_word  &kp RC(PG_UP)      &kp K_APP         &kp RC(PG_DN)     &kp F16         &key_repeat
                                                       &trans          &trans          &trans       &trans      &trans             &trans
            >;
        };

        sym {
            bindings = <
&kp BSLH   &kp FSLH          &kp AMPS         &kp STAR           &kp LPAR           &kp PLUS     &kp TILDE  &kp EQUAL          &kp BSLH          &kp PIPE         &kp GRAVE       &kp QMARK
&kp COMMA  &hrml LGUI ASTRK  &hrml LALT DLLR  &hrml LCTRL PRCNT  &hrml LSHFT CARET  &kp MINUS    &kp MINUS  &hrmr RSHIFT LPAR  &hrmr RCTRL LBKT  &hrmr RALT LBRC  &hrmr RGUI SQT  &kp LT
&kp DOT    &kp RPAR          &kp EXCL         &kp AT             &kp HASH           &kp EQUAL    &kp UNDER  &kp RPAR           &kp RBKT          &kp RBRC         &kp DQT         &kp GT
                                              &trans             &trans             &trans       &trans     &trans             &trans
            >;
        };

        fun {
            bindings = <
&bt BT_CLR_ALL  &kp SLCK          &kp F7         &kp F8          &kp F9          &kp F10    &out OUT_BLE  &kp C_BRI_DN        &kp C_VOL_UP          &kp C_BRI_UP       &bt BT_SEL 4             &bt BT_SEL 3
&bt BT_CLR      &hrml LGUI PSCRN  &hrml LALT F4  &hrml LCTRL F5  &hrml LSHFT F6  &kp F11    &kp C_STOP    &hrmr RSHFT C_PREV  &hrmr RCTRL C_VOL_DN  &hrmr RALT C_NEXT  &hrmr RGUI C_PLAY_PAUSE  &bt BT_SEL 2
&out OUT_TOG    &kp PAUSE_BREAK   &kp F1         &kp F2          &kp F3          &kp F12    &out OUT_USB  &kp PSCRN           &kp C_MUTE            &key_repeat        &bt BT_SEL 0             &bt BT_SEL 1
                                                 &trans          &trans          &trans     &trans        &trans              &trans
            >;
        };
    };
};
